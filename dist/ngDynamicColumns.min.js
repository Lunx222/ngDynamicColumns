/**
 * ngDynamicColumns - v0.3.0 - 2015-08-20
 * https://github.com/marcorinck/ngDynamicColumns
 * Copyright (c) 2015 Marco Rinck; Licensed MIT
 */
!function(a){"use strict";a.module("ngDynamicColumns").directive("columnHeader",["$rootScope","dynamicColumnService",function(a,b){return{restrict:"A",link:function(c,d,e){if(!e.columnHeader)throw new Error("columnHeader directive needs a column configuration object, but got "+e.dynamicRow);if(!c[e.columnHeader])throw new Error("Can't find the column configuration object on the scope: "+e.columnHeader);b.renderColumn(c,d,c[e.columnHeader]),a.$on("columnToggled",function(a,c){b.toggleColumn(d,c)}),a.$on("recreateColumns",function(){b.renderColumn(c,d,c[e.columnHeader])}),a.$on("columnOrderChanged",function(a,c,e){b.changeColumnOrder(d,c,e)})}}}])}(angular),function(a){"use strict";a.module("ngDynamicColumns").factory("dynamicColumnService",["$compile",function(b){function c(a){var b,c="";if(a.scopedAttrs)for(b in a.scopedAttrs)a.scopedAttrs.hasOwnProperty(b)&&(c=c+" "+b+'="'+a.scopedAttrs[b]+'"');return c}function d(a){var b='<table><tr><th data-col-id="'+a.id+'"'+a.directive+' class="'+a.clazz+'"';return b=b+c(a)+"></th></tr></table>"}function e(a){var b='<table><tr><td data-col-id="'+a.id+'"'+a.directive+' class="'+a.clazz+'"';return b=b+c(a)+"></td></tr></table>"}function f(b,c){var f;return"th"===b?f=d(c):"td"===b&&(f=e(c)),a.element(f).find(b)}function g(c,d,e,g,h){d.children()&&d.children().remove(),e.forEach(function(e){var i={directive:e[g],clazz:e.clazz||"",id:e.id};e.visible||(i.clazz=i.clazz+" ng-hide"),e.scopedAttrs&&a.isObject(e.scopedAttrs)&&(i.scopedAttrs=e.scopedAttrs),d.append(b(f(h,i))(c))})}function h(a,b,c){g(a,b,c,"rowDirective","td")}function i(a,b,c){g(a,b,c,"columnDirective","th")}function j(b,c){var d,e,f=b.children();Object.keys(f).some(function(b){return d=f[b],e=d.attributes["data-col-id"].value,e===c?(d=a.element(d),d.hasClass("ng-hide")?a.element(d).removeClass("ng-hide"):a.element(d).addClass("ng-hide"),!0):void 0})}function k(b,c,d){var e,f,g,h,i,j=!1,k=b.children();return Object.keys(k).some(function(b,e){var l=k[b].attributes["data-col-id"].value;return l===c?(f=a.element(k[b]),h=e):l===d&&(g=a.element(k[b]),i=e,f||(j=!0)),f&&g?!0:void 0}),f&&g?(j?(e=g.after(f),f.after(e)):g.after(f),{destIndex:i,sourceIndex:h}):null}return{renderRow:h,renderColumn:i,toggleColumn:j,changeColumnOrder:k}}])}(angular),function(a){"use strict";a.module("ngDynamicColumns").directive("dynamicRow",["$rootScope","dynamicColumnService",function(a,b){var c;return{restrict:"A",link:function(d,e,f){if(!f.dynamicRow)throw new Error("dynamicRow direcive needs a column configuration object, but got "+f.dynamicRow);if(!d[f.dynamicRow])throw new Error("Can't find the column configuration object on the scope: "+f.dynamicRow);b.renderRow(d,e,d[f.dynamicRow]),a.$on("columnToggled",function(a,c){b.toggleColumn(e,c)}),a.$on("recreateColumns",function(){b.renderRow(d,e,d[f.dynamicRow])}),a.$on("columnOrderChanged",function(a,g,h,i){var j=b.changeColumnOrder(e,g,h),k=i||{};c===a||k.skipUpdatingColumnConfiguration||(d[f.dynamicRow].splice(j.destIndex,0,d[f.dynamicRow].splice(j.sourceIndex,1)[0]),c=a)})}}}])}(angular),function(a){"use strict";a.module("ngDynamicColumns",[])}(angular);